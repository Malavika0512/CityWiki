//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CityWiki.Services {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/calculateDistanceAndDuration", ReplyAction="http://tempuri.org/IService1/calculateDistanceAndDurationResponse")]
        string[] calculateDistanceAndDuration(string destination, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/calculateDistanceAndDuration", ReplyAction="http://tempuri.org/IService1/calculateDistanceAndDurationResponse")]
        System.Threading.Tasks.Task<string[]> calculateDistanceAndDurationAsync(string destination, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWeatherDetails", ReplyAction="http://tempuri.org/IService1/getWeatherDetailsResponse")]
        string[] getWeatherDetails(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWeatherDetails", ReplyAction="http://tempuri.org/IService1/getWeatherDetailsResponse")]
        System.Threading.Tasks.Task<string[]> getWeatherDetailsAsync(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNearestStore", ReplyAction="http://tempuri.org/IService1/getNearestStoreResponse")]
        string getNearestStore(string storeName, string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNearestStore", ReplyAction="http://tempuri.org/IService1/getNearestStoreResponse")]
        System.Threading.Tasks.Task<string> getNearestStoreAsync(string storeName, string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSolarEnergyIndex", ReplyAction="http://tempuri.org/IService1/GetSolarEnergyIndexResponse")]
        string GetSolarEnergyIndex(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSolarEnergyIndex", ReplyAction="http://tempuri.org/IService1/GetSolarEnergyIndexResponse")]
        System.Threading.Tasks.Task<string> GetSolarEnergyIndexAsync(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetElectricityRates", ReplyAction="http://tempuri.org/IService1/GetElectricityRatesResponse")]
        string GetElectricityRates(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetElectricityRates", ReplyAction="http://tempuri.org/IService1/GetElectricityRatesResponse")]
        System.Threading.Tasks.Task<string> GetElectricityRatesAsync(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFuelStations", ReplyAction="http://tempuri.org/IService1/GetFuelStationsResponse")]
        string GetFuelStations(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFuelStations", ReplyAction="http://tempuri.org/IService1/GetFuelStationsResponse")]
        System.Threading.Tasks.Task<string> GetFuelStationsAsync(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHotelData", ReplyAction="http://tempuri.org/IService1/GetHotelDataResponse")]
        string GetHotelData(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHotelData", ReplyAction="http://tempuri.org/IService1/GetHotelDataResponse")]
        System.Threading.Tasks.Task<string> GetHotelDataAsync(string placename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getnews", ReplyAction="http://tempuri.org/IService1/getnewsResponse")]
        string[] getnews(string[] topic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getnews", ReplyAction="http://tempuri.org/IService1/getnewsResponse")]
        System.Threading.Tasks.Task<string[]> getnewsAsync(string[] topic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEarthquakeIndex", ReplyAction="http://tempuri.org/IService1/GetEarthquakeIndexResponse")]
        int GetEarthquakeIndex(double latitude, double longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEarthquakeIndex", ReplyAction="http://tempuri.org/IService1/GetEarthquakeIndexResponse")]
        System.Threading.Tasks.Task<int> GetEarthquakeIndexAsync(double latitude, double longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CityWiki.Services.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CityWiki.Services.IService1>, CityWiki.Services.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] calculateDistanceAndDuration(string destination, string source) {
            return base.Channel.calculateDistanceAndDuration(destination, source);
        }
        
        public System.Threading.Tasks.Task<string[]> calculateDistanceAndDurationAsync(string destination, string source) {
            return base.Channel.calculateDistanceAndDurationAsync(destination, source);
        }
        
        public string[] getWeatherDetails(string zipCode) {
            return base.Channel.getWeatherDetails(zipCode);
        }
        
        public System.Threading.Tasks.Task<string[]> getWeatherDetailsAsync(string zipCode) {
            return base.Channel.getWeatherDetailsAsync(zipCode);
        }
        
        public string getNearestStore(string storeName, string zipCode) {
            return base.Channel.getNearestStore(storeName, zipCode);
        }
        
        public System.Threading.Tasks.Task<string> getNearestStoreAsync(string storeName, string zipCode) {
            return base.Channel.getNearestStoreAsync(storeName, zipCode);
        }
        
        public string GetSolarEnergyIndex(string placename) {
            return base.Channel.GetSolarEnergyIndex(placename);
        }
        
        public System.Threading.Tasks.Task<string> GetSolarEnergyIndexAsync(string placename) {
            return base.Channel.GetSolarEnergyIndexAsync(placename);
        }
        
        public string GetElectricityRates(string placename) {
            return base.Channel.GetElectricityRates(placename);
        }
        
        public System.Threading.Tasks.Task<string> GetElectricityRatesAsync(string placename) {
            return base.Channel.GetElectricityRatesAsync(placename);
        }
        
        public string GetFuelStations(string placename) {
            return base.Channel.GetFuelStations(placename);
        }
        
        public System.Threading.Tasks.Task<string> GetFuelStationsAsync(string placename) {
            return base.Channel.GetFuelStationsAsync(placename);
        }
        
        public string GetHotelData(string placename) {
            return base.Channel.GetHotelData(placename);
        }
        
        public System.Threading.Tasks.Task<string> GetHotelDataAsync(string placename) {
            return base.Channel.GetHotelDataAsync(placename);
        }
        
        public string[] getnews(string[] topic) {
            return base.Channel.getnews(topic);
        }
        
        public System.Threading.Tasks.Task<string[]> getnewsAsync(string[] topic) {
            return base.Channel.getnewsAsync(topic);
        }
        
        public int GetEarthquakeIndex(double latitude, double longitude) {
            return base.Channel.GetEarthquakeIndex(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<int> GetEarthquakeIndexAsync(double latitude, double longitude) {
            return base.Channel.GetEarthquakeIndexAsync(latitude, longitude);
        }
    }
}
